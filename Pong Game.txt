import turtle

# set up the screen
root = turtle.Screen()
root.title("Roshan Pong Game")
root.bgcolor('#f7f1ea')
root.setup(width=1000, height=400)

# create the ball, giving its shape, color, and size
ball = turtle.Turtle()
ball.speed(30)
ball.shape("circle")
ball.color('#89bfbd')
ball.penup()
ball.goto(0, 0)
ball.dx = 5
ball.dy = -5

# create the paddles, giving their shapes, colors, and sizes
left_pad = turtle.Turtle()
left_pad.speed(0)
left_pad.shape("square")
left_pad.color("#679ba7")
left_pad.shapesize(stretch_wid=6, stretch_len=2)
left_pad.penup()
left_pad.goto(-450, 0)

right_pad = turtle.Turtle()
right_pad.speed(0)
right_pad.shape("square")
right_pad.color("#679ba7")
right_pad.shapesize(stretch_wid=6, stretch_len=2)
right_pad.penup()
right_pad.goto(450, 0)

# score
score_l = 0
score_r = 0

# create the score board
pen = turtle.Turtle()
pen.speed(0)
pen.color("black")
pen.penup()
pen.hideturtle()
pen.goto(0, 170)
pen.write("Player A: {}  Player B: {}".format(score_l, score_r), align="center", font=("Arial", 16, "bold"))


# define the paddle functions
def left_up():
    y = left_pad.ycor()
    y += 22
    left_pad.sety(y)


def left_down():
    y = left_pad.ycor()
    y -= 22
    left_pad.sety(y)


def right_up():
    y = right_pad.ycor()
    y += 22
    right_pad.sety(y)


def right_down():
    y = right_pad.ycor()
    y -= 22
    right_pad.sety(y)


# keyboard bindings
root.listen()
root.onkeypress(left_up, "w")
root.onkeypress(left_down, "s")
root.onkeypress(right_up, "Up")
root.onkeypress(right_down, "Down")

# main game loop
while True:
    root.update()

    # move the ball
    ball.setx(ball.xcor() + ball.dx)
    ball.sety(ball.ycor() + ball.dy)

    # check for collisions with the walls
    if ball.ycor() > 190 or ball.ycor() < -190:
        ball.dy *= -1

    # check for collisions with the paddles
    if 430 < ball.xcor() < 440 and right_pad.ycor() + 60 > ball.ycor() > right_pad.ycor() - 60:
        ball.dx *= -1
        score_r += 1
        pen.clear()
        pen.write("Player1: {}  Player2: {}".format(score_l, score_r), align="center", font=("Arial", 15, "bold"))


    if -430 > ball.xcor() > -440 and left_pad.ycor() + 60 > ball.ycor() > left_pad.ycor() - 60:
        ball.dx *= -1
        score_l += 1
        pen.clear()
        pen.write("Player1: {}  Player2: {}".format(score_l, score_r), align="center", font=("Arial", 15, "bold"))


    # Checking if the players missed the hit
    if ball.xcor() > 480 or ball.xcor() < -480:
        if ball.xcor() < -480:
            score_r += 1  # Increasing the score of the right player
        else:
            score_l += 1  # Increasing the score of the left player
        ball.goto(0, 0)
        ball.dx *= -1
        ball.dy *= -1
        # Updating the score
        pen.clear()
        pen.write("Player1 : {} Player2: {}".format(score_l, score_r), align="center", font=("Arial", 15, "bold"))
